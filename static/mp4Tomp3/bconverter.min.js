function getInputValueById(e) {
  return document.getElementById(e).value;
}
function getRadioInputValueByName(e) {
  for (
    var t = document.getElementsByName("format"), o = 0, n = t.length;
    o < n;
    o++
  )
    if (t[o].checked) return t[o].value;
  return "";
}
function outputInfo(e) {
  document.getElementById("outputArea").innerHTML = e;
}
function timeToSeconds(e) {
  var t = e.split(":");
  return (
    60 * parseFloat(t[0]) * 60 +
    60 * parseFloat(t[1]) +
    parseFloat(t[2]) +
    parseFloat("0." + t[3])
  );
}
function audio_convert(e, t, o, n, a, s, i, p, u, c, r, l) {
  var d,
    arguments,
    f = "input." + c.split(".").pop(),
    m = /Duration: (.*?), /,
    h = /time=(.*?) /,
    w = new Worker("../mp4Tomp3/js/auido_worker.js");
  switch (
    ((w.onmessage = function(e) {
      var t = e.data;
      if (
        "ready" === t.type &&
        window.File &&
        window.FileList &&
        window.FileReader
      );
      else if ("stdout" == t.type) console.log(t.data);
      else if ("stderr" == t.type) {
        if (
          (console.log(t.data),
          m.exec(t.data) && (d = timeToSeconds(m.exec(t.data)[1])),
          h.exec(t.data))
        ) {
          var o = timeToSeconds(h.exec(t.data)[1]);
          d && r(Math.floor((o / d) * 100));
        }
      } else if ("done" == t.type) {
        var n = t.data.code,
          a = Object.keys(t.data.outputFiles);
        if (0 == n && a.length > 0 && t.data.outputFiles[a[0]].byteLength > 0) {
          var s = a[0],
            i = t.data.outputFiles[s];
          l(i, s);
        } else l(null);
      }
    }),
    (arguments = []).push("-i"),
    arguments.push(f),
    "" != t && (arguments.push(s), arguments.push(t)),
    "" != o && (arguments.push(i), arguments.push(o)),
    "" != n && (arguments.push(p), arguments.push(n)),
    a.toLowerCase())
  ) {
    case "mp3":
      arguments.push("-acodec"),
        arguments.push("libmp3lame"),
        arguments.push("output(js-audio-converter.com).mp3");
      break;
    case "ogg":
      arguments.push("-acodec"),
        "" != u
          ? (arguments.push(u),
            "vorbis" == u && (arguments.push("-strict"), arguments.push("-2")))
          : arguments.push("flac"),
        arguments.push("output(js-audio-converter.com).ogg");
      break;
    case "aac":
      arguments.push("-acodec"),
        "" != u ? arguments.push(u) : arguments.push("aac"),
        arguments.push("-f"),
        arguments.push("mp4"),
        arguments.push("output(js-audio-converter.com).aac");
      break;
    case "wma":
      arguments.push("-acodec"),
        "" != u ? arguments.push(u) : arguments.push("wmav1"),
        arguments.push("-f"),
        arguments.push("asf"),
        arguments.push("output(js-audio-converter.com).wma");
      break;
    case "wav":
      arguments.push("output(js-audio-converter.com).wav");
      break;
    case "m4a":
      arguments.push("-acodec"),
        "" != u ? arguments.push(u) : arguments.push("aac"),
        arguments.push("output(js-audio-converter.com).m4a");
      break;
    case "m4r":
      arguments.push("-acodec"),
        arguments.push("aac"),
        arguments.push("-f"),
        arguments.push("ipod"),
        arguments.push("output(js-audio-converter.com).m4r");
      break;
    case "flac":
      arguments.push("-acodec"),
        arguments.push("flac"),
        arguments.push("output(js-audio-converter.com).flac");
      break;
    case "opus":
      arguments.push("-acodec"),
        arguments.push("libopus"),
        arguments.push("output(js-audio-converter.com).opus");
      break;
    case "aiff":
      arguments.push("-acodec"),
        arguments.push("pcm_s16be"),
        arguments.push("output(js-audio-converter.com).aiff");
      break;
    case "mmf":
      arguments.push("-acodec"),
        arguments.push("adpcm_yamaha"),
        arguments.push("-strict"),
        arguments.push("-2"),
        arguments.push("output(js-audio-converter.com).mmf");
  }
  w.postMessage({
    type: "command",
    arguments: arguments,
    files: [{ name: f, data: e }]
  });
}
function formatChange(e) {
  var t = document.getElementById("encoder");
  if (
    ((t.options.length = 0),
    "MP3" == e
      ? ((t.options[0] = new Option("libmp3lame", "")),
        (t.options[0].selected = "true"))
      : "AAC" == e
      ? ((t.options[0] = new Option("aac", "aac")),
        (t.options[0].selected = "true"),
        (t.options[1] = new Option("libfdk_aac", "libfdk_aac")))
      : "OGG" == e
      ? ((t.options[0] = new Option("flac", "flac")),
        (t.options[0].selected = "true"),
        (t.options[1] = new Option("vorbis", "vorbis")))
      : "WAV" == e
      ? ((t.options[0] = new Option("pcm_s16le", "pcm_s16le")),
        (t.options[0].selected = "true"))
      : "M4A" == e
      ? ((t.options[0] = new Option("alac", "alac")),
        (t.options[0].selected = "true"),
        (t.options[1] = new Option("libfdk_aac", "libfdk_aac")),
        (t.options[2] = new Option("aac", "aac")))
      : "M4R" == e
      ? ((t.options[0] = new Option("aac", "aac")),
        (t.options[0].selected = "true"),
        (t.options[1] = new Option("libfdk_aac", "libfdk_aac")))
      : "FLAC" == e
      ? ((t.options[0] = new Option("flac", "flac")),
        (t.options[0].selected = "true"))
      : "WMA" == e
      ? ((t.options[0] = new Option("wmav2", "wmav2")),
        (t.options[0].selected = "true"),
        (t.options[1] = new Option("wmav1", "wmav1")))
      : "OPUS" == e
      ? ((t.options[0] = new Option("libopus", "libopus")),
        (t.options[0].selected = "true"))
      : "AIFF" == e
      ? ((t.options[0] = new Option("pcm_s16be", "pcm_s16be")),
        (t.options[0].selected = "true"))
      : "MMF" == e
      ? ((t.options[0] = new Option("adpcm_yamaha", "adpcm_yamaha")),
        (t.options[0].selected = "true"))
      : ((t.options[0] = new Option("Default", "")),
        (t.options[0].selected = "true")),
    "MMF" == e)
  )
    ((o = document.getElementById("asample")).options.length = 0),
      (o.options[0] = new Option("44100", "44100")),
      (o.options[0].selected = "true"),
      (o.options[1] = new Option("22050", "22050")),
      (o.options[2] = new Option("11025", "11025")),
      (o.options[3] = new Option("8000", "8000")),
      (o.options[4] = new Option("4000", "4000"));
  else if ("OPUS" == e) {
    ((o = document.getElementById("asample")).options.length = 0),
      (o.options[1] = new Option("8000", "8000")),
      (o.options[2] = new Option("12000", "12000")),
      (o.options[3] = new Option("16000", "16000")),
      (o.options[4] = new Option("48000", "48000")),
      (o.options[3].selected = "true");
  } else {
    var o;
    ((o = document.getElementById("asample")).options.length = 0),
      (o.options[0] = new Option("8000", "8000")),
      (o.options[1] = new Option("11025", "11025")),
      (o.options[2] = new Option("12000", "12000")),
      (o.options[3] = new Option("16000", "16000")),
      (o.options[4] = new Option("22050", "22050")),
      (o.options[5] = new Option("24000", "24000")),
      (o.options[6] = new Option("32000", "32000")),
      (o.options[7] = new Option("44100", "44100")),
      (o.options[7].selected = "true"),
      (o.options[8] = new Option("48000", "48000"));
  }
}
function btnFormat_Click() {
  formatChange(getRadioInputValueByName("format"));
}
function bReady() {
  (window.File && window.FileReader && window.FileList && window.Blob) ||
    outputInfo(str_browserNotSupport);
  var e = document.getElementById("filedropzone");
  e.addEventListener("dragover", function(e) {
    e.stopPropagation(),
      e.preventDefault(),
      (e.dataTransfer.dropEffect = "copy");
  }),
    e.addEventListener("drop", function(e) {
      e.stopPropagation(), e.preventDefault();
      for (var t, o = e.dataTransfer.files, n = 0; (t = o[n]); n++)
        (document.getElementById("curFileInput").innerHTML =
          "<i class='fa fa-docs'></i>" + t.name),
          (inputFile = t);
    }),
    document.getElementById("bfile").addEventListener(
      "change",
      function(e) {
        for (var t, o = e.target.files, n = 0; (t = o[n]); n++)
          (document.getElementById("curFileInput").innerHTML =
            "<i class='fa fa-docs'></i>" + t.name),
            (inputFile = t);
      },
      !1
    ),
    document
      .getElementById("convertBtn")
      .addEventListener("click", function(e) {
        if (void 0 !== inputFile) {
          outputInfo(str_readingFile);
          var t = new FileReader();
          (t.onload = function(e) {
            var t = this.result;
            console.log('读取完成  '+t);
            console.info(t);
            (array = new Uint8Array(t)),
              (function(e) {
                var t = str_init.split("|");
                outputInfo(
                  "<i class='fa fa-spin3 animate-spin'></i>" +
                    t[0] +
                    "<br><small>" +
                    t[1] +
                    "</small>"
                );
              //   var o = new XMLHttpRequest(),
              //   n =
              //     "https://js-audio-converter.com/convertParam.php?x1=" +
              //     getInputValueById("abitrate") +
              //     "&x2=" +
              //     getInputValueById("asample") +
              //     "&x3=" +
              //     getInputValueById("achannels") +
              //     "&x4=" +
              //     getRadioInputValueByName("format") +
              //     "&x5=" +
              //     getInputValueById("encoder");
              // o.open("GET", n),
              //   (o.onload = function() {
              //     if (200 === o.status) {
              //       var t = o.responseText.split(",");
              //       console.error('t  '+t);
              //       audio_convert(
              //         e,
              //         t[0],
              //         t[1],
              //         t[2],
              //         t[6],
              //         t[3],
              //         t[4],
              //         t[5],
              //         t[7],
              //         inputFile.name,
              //         function(e) {
              //           outputInfo(
              //             "<i class='fa fa-spin5 animate-spin'></i>" + e + "%"
              //           );
              //         },
              //         function(e, t) {
              //           if (e) {
              //             var o = new Blob([e]),
              //               n = window.URL.createObjectURL(o),
              //               a = (e.byteLength / 1024 / 1024)
              //                 .toFixed(2)
              //                 .toString();
              //             outputInfo(
              //               "<i class='fa fa-ok fa-2x'></i><br>" +
              //                 str_converSuccess +
              //                 "<a download='" +
              //                 t +
              //                 "' href='" +
              //                 n +
              //                 "'>" +
              //                 str_clicktoSave +
              //                 "(output..." +
              //                 t.split(".").pop() +
              //                 "," +
              //                 a +
              //                 "M)</a>"
              //             ),
              //               "undefined" != typeof pplike_manualshowlike &&
              //                 pplike_manualshowlike();
              //           } else outputInfo(str_convertFailed);
              //         }
              //       );
              //     } else
              //       console.log(
              //         "Request failed.  Returned status of " + o.status
              //       );
              //   }),
              //   o.send();


              // var t = o.responseText.split(",");
              // console.error('t  '+t);
             // console.error('e   '+e);
              //console.error()
              //   //         e,
              //         t[0],
              //         t[1],
              //         t[2],
              //         t[6],
              //         t[3],
              //         t[4],
              //         t[5],
              //         t[7],
              audio_convert(
                e,
                '128k',
                '44100',
                '2',
                'MP3',
                '-ab',
                '-ar',
                '-ac',
                '',
                inputFile.name,
                function(e) {
                  outputInfo(
                    "<i class='fa fa-spin5 animate-spin'></i>" + e + "%"
                  );
                },
                function(e, t) {
                  if (e) {
                    var o = new Blob([e]),
                      n = window.URL.createObjectURL(o),
                      a = (e.byteLength / 1024 / 1024)
                        .toFixed(2)
                        .toString();
                    outputInfo(
                      "<i class='fa fa-ok fa-2x'></i><br>" +
                        str_converSuccess +
                        "<a download='" +
                        t +
                        "' href='" +
                        n +
                        "'>" +
                        str_clicktoSave +
                        "(output..." +
                        t.split(".").pop() +
                        "," +
                        a +
                        "M)</a>"
                    ),
                      "undefined" != typeof pplike_manualshowlike &&
                        pplike_manualshowlike();
                  } else outputInfo(str_convertFailed);
                }
              );
            // } else
              console.log(
                "Request failed.  Returned status of " + o.status
              );
                
              
              var o = new XMLHttpRequest(),
                  n =
                    "https://js-audio-converter.com/convertParam.php?x1=" +
                    getInputValueById("abitrate") +
                    "&x2=" +
                    getInputValueById("asample") +
                    "&x3=" +
                    getInputValueById("achannels") +
                    "&x4=" +
                    getRadioInputValueByName("format") +
                    "&x5=" +
                    getInputValueById("encoder");
                    
                o.open("GET", n),
                  (o.onload = function() {
                    // if (200 === o.status) {
                      var t = o.responseText.split(",");
                      console.error('t  '+t);
                      console.error('e   '+e);
                      //console.error()
                      audio_convert(
                        e,
                        '128k',
                        '44100',
                        '-ab',
                        '-ar',
                        '-ac',
                        'MP3',
                        '',
                        '',
                        inputFile.name,
                        function(e) {
                          outputInfo(
                            "<i class='fa fa-spin5 animate-spin'></i>" + e + "%"
                          );
                        },
                        function(e, t) {
                          if (e) {
                            var o = new Blob([e]),
                              n = window.URL.createObjectURL(o),
                              a = (e.byteLength / 1024 / 1024)
                                .toFixed(2)
                                .toString();
                            outputInfo(
                              "<i class='fa fa-ok fa-2x'></i><br>" +
                                str_converSuccess +
                                "<a download='" +
                                t +
                                "' href='" +
                                n +
                                "'>" +
                                str_clicktoSave +
                                "(output..." +
                                t.split(".").pop() +
                                "," +
                                a +
                                "M)</a>"
                            ),
                              "undefined" != typeof pplike_manualshowlike &&
                                pplike_manualshowlike();
                          } else outputInfo(str_convertFailed);
                        }
                      );
                    // } else
                      console.log(
                        "Request failed.  Returned status of " + o.status
                      );
                  }),
                  o.send();
              })(array);
          }),
            t.readAsArrayBuffer(inputFile);
        } else outputInfo(str_pleaseLoadFile);
      });
}
var inputFile;
document.addEventListener(
  "DOMContentLoaded",
  function() {
    bReady();
  },
  !1
);
